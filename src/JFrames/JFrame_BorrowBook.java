package JFrames;

import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import Connection.DatabaseConnection;
import static JFrames.Objects.con;
import static JFrames.Objects.cst;
import static JFrames.Objects.pst;
import static JFrames.Objects.rs;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.time.LocalDateTime;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Joshua C. Magoliman
 */
public class JFrame_BorrowBook extends javax.swing.JFrame {

    /**
     * Creates new form JFrame_BorrowBook
     */
    private int book_id, student_id;

    public JFrame_BorrowBook() {
        initComponents();
        DatabaseConnection dbc = DatabaseConnection.getDatabaseConnection();
        con = dbc.getConnection();
        setIcon();
        showDateAndTime();
        reset();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPANEL1 = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblDate = new javax.swing.JLabel();
        lblDay = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblFullName = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        lblGradeLevel = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        lblStatusValue = new javax.swing.JLabel();
        lblFullNameValue = new javax.swing.JLabel();
        lblGradeLevelValue = new javax.swing.JLabel();
        lblProfile = new javax.swing.JLabel();
        lblStudentRFID = new javax.swing.JLabel();
        txtStudentRFID = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        lblBookRFID = new javax.swing.JLabel();
        txtBookRFID = new javax.swing.JTextField();
        chkSelectAll = new javax.swing.JCheckBox();
        lblTotalEntry = new javax.swing.JLabel();
        btnRemove = new javax.swing.JButton();
        btnBorrow = new javax.swing.JButton();
        lblBorrowedUntil = new javax.swing.JLabel();
        dcBorrowedUntil = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBorrowingBook = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BORROW BOOK");
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1347, 614));

        JPANEL1.setBackground(java.awt.Color.white);
        JPANEL1.setDoubleBuffered(false);
        JPANEL1.setMaximumSize(null);

        lblTitle.setBackground(java.awt.Color.black);
        lblTitle.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblTitle.setText("BORROW BOOK");

        btnBack.setBackground(new java.awt.Color(0, 153, 0));
        btnBack.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnBack.setForeground(java.awt.Color.white);
        btnBack.setText("BACK");
        btnBack.setBorderPainted(false);
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.setFocusPainted(false);
        btnBack.setFocusable(false);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblDate.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblDate.setText("DATE");

        lblDay.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblDay.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblDay.setText("DAY");

        lblTime.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblTime.setText("TIME");

        jPanel1.setBackground(new java.awt.Color(33, 47, 61));

        lblFullName.setBackground(new java.awt.Color(51, 0, 102));
        lblFullName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblFullName.setForeground(new java.awt.Color(255, 255, 255));
        lblFullName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblFullName.setText("FULL NAME:");
        lblFullName.setInheritsPopupMenu(false);

        lblStatus.setBackground(new java.awt.Color(51, 0, 102));
        lblStatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(255, 255, 255));
        lblStatus.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblStatus.setText("STATUS:");
        lblStatus.setInheritsPopupMenu(false);

        lblGradeLevel.setBackground(new java.awt.Color(51, 0, 102));
        lblGradeLevel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblGradeLevel.setForeground(new java.awt.Color(255, 255, 255));
        lblGradeLevel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblGradeLevel.setText("GRADE LEVEL:");
        lblGradeLevel.setInheritsPopupMenu(false);

        btnCancel.setBackground(new java.awt.Color(0, 153, 0));
        btnCancel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnCancel.setForeground(java.awt.Color.white);
        btnCancel.setText("CANCEL");
        btnCancel.setBorderPainted(false);
        btnCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancel.setFocusPainted(false);
        btnCancel.setFocusable(false);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblStatusValue.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblStatusValue.setForeground(new java.awt.Color(255, 255, 255));
        lblStatusValue.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblStatusValue.setText("VALUE");
        lblStatusValue.setInheritsPopupMenu(false);

        lblFullNameValue.setBackground(new java.awt.Color(51, 0, 102));
        lblFullNameValue.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblFullNameValue.setForeground(new java.awt.Color(255, 255, 255));
        lblFullNameValue.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblFullNameValue.setText("VALUE");
        lblFullNameValue.setInheritsPopupMenu(false);

        lblGradeLevelValue.setBackground(new java.awt.Color(51, 0, 102));
        lblGradeLevelValue.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblGradeLevelValue.setForeground(new java.awt.Color(255, 255, 255));
        lblGradeLevelValue.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblGradeLevelValue.setText("VALUE");
        lblGradeLevelValue.setInheritsPopupMenu(false);

        lblProfile.setBackground(new java.awt.Color(51, 255, 255));
        lblProfile.setOpaque(true);

        lblStudentRFID.setBackground(new java.awt.Color(51, 0, 102));
        lblStudentRFID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblStudentRFID.setForeground(java.awt.Color.white);
        lblStudentRFID.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblStudentRFID.setText("STUDENT RFID: ");
        lblStudentRFID.setInheritsPopupMenu(false);

        txtStudentRFID.setBackground(java.awt.Color.white);
        txtStudentRFID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtStudentRFID.setForeground(java.awt.Color.black);
        txtStudentRFID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtStudentRFID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStudentRFIDActionPerformed(evt);
            }
        });
        txtStudentRFID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtStudentRFIDKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblFullName)
                            .addComponent(lblStatus)
                            .addComponent(lblGradeLevel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblStatusValue)
                            .addComponent(lblFullNameValue)
                            .addComponent(lblGradeLevelValue)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblStudentRFID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtStudentRFID, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(lblProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStudentRFID)
                    .addComponent(txtStudentRFID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStatus)
                    .addComponent(lblStatusValue))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFullName)
                    .addComponent(lblFullNameValue))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGradeLevel)
                    .addComponent(lblGradeLevelValue))
                .addGap(18, 18, 18)
                .addComponent(btnCancel)
                .addGap(21, 21, 21))
        );

        jPanel2.setBackground(new java.awt.Color(33, 47, 61));

        lblBookRFID.setBackground(new java.awt.Color(51, 0, 102));
        lblBookRFID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblBookRFID.setForeground(java.awt.Color.white);
        lblBookRFID.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblBookRFID.setText("BOOK RFID: ");
        lblBookRFID.setInheritsPopupMenu(false);

        txtBookRFID.setBackground(java.awt.Color.white);
        txtBookRFID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtBookRFID.setForeground(java.awt.Color.black);
        txtBookRFID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBookRFID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBookRFIDActionPerformed(evt);
            }
        });
        txtBookRFID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBookRFIDKeyTyped(evt);
            }
        });

        chkSelectAll.setBackground(new java.awt.Color(33, 47, 61));
        chkSelectAll.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        chkSelectAll.setForeground(java.awt.Color.white);
        chkSelectAll.setText("Select All");
        chkSelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSelectAllActionPerformed(evt);
            }
        });

        lblTotalEntry.setBackground(new java.awt.Color(51, 0, 102));
        lblTotalEntry.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTotalEntry.setForeground(java.awt.Color.white);
        lblTotalEntry.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTotalEntry.setText("TOTAL ENTRY:");
        lblTotalEntry.setInheritsPopupMenu(false);

        btnRemove.setBackground(new java.awt.Color(0, 153, 0));
        btnRemove.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnRemove.setForeground(java.awt.Color.white);
        btnRemove.setText("REMOVE");
        btnRemove.setBorderPainted(false);
        btnRemove.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRemove.setFocusPainted(false);
        btnRemove.setFocusable(false);
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnBorrow.setBackground(new java.awt.Color(0, 153, 0));
        btnBorrow.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnBorrow.setForeground(java.awt.Color.white);
        btnBorrow.setText("BORROW");
        btnBorrow.setBorderPainted(false);
        btnBorrow.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBorrow.setFocusPainted(false);
        btnBorrow.setFocusable(false);
        btnBorrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrowActionPerformed(evt);
            }
        });

        lblBorrowedUntil.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblBorrowedUntil.setForeground(java.awt.Color.white);
        lblBorrowedUntil.setText("Borrowed Until: ");

        dcBorrowedUntil.setBackground(java.awt.Color.white);
        dcBorrowedUntil.setForeground(java.awt.Color.black);
        dcBorrowedUntil.setDateFormatString("yyyy-MM-dd");
        dcBorrowedUntil.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        tblBorrowingBook.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblBorrowingBook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "RFID", "TITLE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBorrowingBook.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblBorrowingBook.setColumnSelectionAllowed(true);
        tblBorrowingBook.getTableHeader().setReorderingAllowed(false);
        tblBorrowingBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBorrowingBookMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBorrowingBook);
        tblBorrowingBook.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tblBorrowingBook.getColumnModel().getColumnCount() > 0) {
            tblBorrowingBook.getColumnModel().getColumn(0).setResizable(false);
            tblBorrowingBook.getColumnModel().getColumn(0).setPreferredWidth(70);
            tblBorrowingBook.getColumnModel().getColumn(1).setResizable(false);
            tblBorrowingBook.getColumnModel().getColumn(1).setPreferredWidth(200);
            tblBorrowingBook.getColumnModel().getColumn(2).setResizable(false);
            tblBorrowingBook.getColumnModel().getColumn(2).setPreferredWidth(600);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblBookRFID)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtBookRFID, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(chkSelectAll)
                                .addGap(528, 528, 528)
                                .addComponent(lblTotalEntry))
                            .addComponent(jScrollPane1)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(248, 248, 248)
                        .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btnBorrow, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblBorrowedUntil)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dcBorrowedUntil, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(168, 168, 168))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBookRFID)
                    .addComponent(txtBookRFID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkSelectAll)
                    .addComponent(lblTotalEntry))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblBorrowedUntil)
                    .addComponent(dcBorrowedUntil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemove)
                    .addComponent(btnBorrow))
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout JPANEL1Layout = new javax.swing.GroupLayout(JPANEL1);
        JPANEL1.setLayout(JPANEL1Layout);
        JPANEL1Layout.setHorizontalGroup(
            JPANEL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPANEL1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(JPANEL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPANEL1Layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(300, 300, 300)
                        .addComponent(lblDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblDay)
                        .addGap(208, 208, 208)
                        .addComponent(lblTime)
                        .addGap(121, 121, 121))
                    .addGroup(JPANEL1Layout.createSequentialGroup()
                        .addGroup(JPANEL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(JPANEL1Layout.createSequentialGroup()
                                .addGap(532, 532, 532)
                                .addComponent(lblTitle))
                            .addGroup(JPANEL1Layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(12, Short.MAX_VALUE))))
        );
        JPANEL1Layout.setVerticalGroup(
            JPANEL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPANEL1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(JPANEL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addGroup(JPANEL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(lblDate)
                    .addComponent(lblDay)
                    .addComponent(lblTime))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JPANEL1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(JPANEL1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(1, 1, 1))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
   private void reset() {
        txtStudentRFID.setText("");
        txtBookRFID.setText("");
        txtStudentRFID.setEnabled(true);
        txtStudentRFID.requestFocus();
        lblStatusValue.setText("");
        lblFullNameValue.setText("");
        lblGradeLevelValue.setText("");
        btnCancel.setVisible(false);
        btnBack.setEnabled(true);
        ImageIcon myimage = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("BLANKPICTURE.png")));
        Image img1 = myimage.getImage();
        Image img2 = img1.getScaledInstance(lblProfile.getWidth(), lblProfile.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon i = new ImageIcon(img2);
        lblProfile.setIcon(i);
        txtBookRFID.setEnabled(false);
        tblBorrowingBook.setEnabled(false);
        chkSelectAll.setEnabled(false);
        lblTotalEntry.setEnabled(false);
        lblBorrowedUntil.setEnabled(false);
        dcBorrowedUntil.setEnabled(false);
        btnRemove.setEnabled(false);
        btnBorrow.setEnabled(false);
        this.lblTotalEntry.setText("TOTAL ENTRY: ");
        DefaultTableModel dm = (DefaultTableModel) tblBorrowingBook.getModel();
        while (dm.getRowCount() > 0) {
            dm.removeRow(0);
        }
        dcBorrowedUntil.setDate(null);
        dcBorrowedUntil.getJCalendar().setMinSelectableDate(new Date());
    }
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.setVisible(false);
        JFrame_Main nextFrame = new JFrame_Main();
        nextFrame.setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtBookRFIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBookRFIDActionPerformed
        checkingBookRFID();
    }//GEN-LAST:event_txtBookRFIDActionPerformed

    private void txtBookRFIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBookRFIDKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
        if (txtBookRFID.getText().length() >= 10) {
            evt.consume();
        }
    }//GEN-LAST:event_txtBookRFIDKeyTyped
    private void checkingBookRFID() {
        try {
            pst = con.prepareStatement("SELECT * FROM tbl_books WHERE rfid = ?");
            pst.setString(1, txtBookRFID.getText());
            rs = pst.executeQuery();
            if (rs.next()) {
                String rfid, title = "";
                rfid = rs.getString("rfid");
                title = rs.getString("title");
                DefaultTableModel model = (DefaultTableModel) tblBorrowingBook.getModel();
                model.addRow(new Object[]{false, rfid, title});
                DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                centerRenderer.setHorizontalAlignment(JLabel.CENTER);
                tblBorrowingBook.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
                tblBorrowingBook.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
                this.lblTotalEntry.setText("TOTAL ENTRY: " + tblBorrowingBook.getRowCount());
                checkIftblBorrowBookIsEmptyOrNot();
            } else {

                JOptionPane.showMessageDialog(this, "This Book RFID was not found!", "ATTENTION", JOptionPane.ERROR_MESSAGE);
            }
            txtBookRFID.setText("");
            txtBookRFID.requestFocus();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
            ex.printStackTrace();
        }
    }
    private void txtStudentRFIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStudentRFIDActionPerformed
        retrieveStudentInfo();
        if (lblStatusValue.getText().equals("Allowed")) {
            enabled();
        }
    }//GEN-LAST:event_txtStudentRFIDActionPerformed

    private void retrieveStudentInfo() {
        try {
            pst = con.prepareStatement("SELECT * FROM tbl_students WHERE rfid = ?");
            pst.setString(1, txtStudentRFID.getText());
            rs = pst.executeQuery();
            if (rs.next()) {
                txtStudentRFID.setEnabled(false);
                btnCancel.setVisible(true);
                btnBack.setEnabled(false);
                student_id = rs.getInt("id");
                int status = rs.getInt("status_id");
                if (1 == status) {
                    lblStatusValue.setForeground(new java.awt.Color(0, 204, 0));
                    lblStatusValue.setText("Allowed");
                } else if (2 == status) {
                    lblStatusValue.setForeground(new java.awt.Color(255, 0, 51));
                    lblStatusValue.setText("Not Allowed");
                }
                lblFullNameValue.setText(rs.getString("full_name"));
                int gradeLevel = rs.getInt("grade_level_id");
                if (1 == gradeLevel) {
                    lblGradeLevelValue.setText("Grade 7");
                } else if (2 == gradeLevel) {
                    lblGradeLevelValue.setText("Grade 8");
                } else if (3 == gradeLevel) {
                    lblGradeLevelValue.setText("Grade 9");
                } else if (4 == gradeLevel) {
                    lblGradeLevelValue.setText("Grade 10");
                } else if (5 == gradeLevel) {
                    lblGradeLevelValue.setText("Grade 11");
                } else if (6 == gradeLevel) {
                    lblGradeLevelValue.setText("Grade 12");
                }
                byte[] imagedata = rs.getBytes("photo");
                ImageIcon format = new ImageIcon(scaledImage(imagedata, lblProfile.getWidth(), lblProfile.getHeight()));
                lblProfile.setIcon(format);
            } else {
                txtStudentRFID.setText("");
                txtStudentRFID.requestFocus();
                JOptionPane.showMessageDialog(this, "This STUDENT RFID was not found!", "ATTENTION", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
            ex.printStackTrace();
        }
    }

    private void enabled() {
        txtBookRFID.setEnabled(true);
        tblBorrowingBook.setEnabled(true);
        chkSelectAll.setEnabled(true);
        lblTotalEntry.setEnabled(true);
        lblBorrowedUntil.setEnabled(true);
        dcBorrowedUntil.setEnabled(true);
        btnRemove.setEnabled(true);
        btnBorrow.setEnabled(true);
        txtBookRFID.requestFocus();
        checkIftblBorrowBookIsEmptyOrNot();
    }

    private void checkIftblBorrowBookIsEmptyOrNot() {
        this.lblTotalEntry.setText("TOTAL ENTRY: " + tblBorrowingBook.getRowCount());
        if (this.lblTotalEntry.getText().equals("TOTAL ENTRY: " + 0)) {
            chkSelectAll.setSelected(false);
            chkSelectAll.setEnabled(false);
            btnRemove.setEnabled(false);
            btnBorrow.setEnabled(false);
            dcBorrowedUntil.setEnabled(false);
        } else if (this.lblTotalEntry.getText().equals("TOTAL ENTRY: " + 1)) {
            chkSelectAll.setEnabled(false);
        } else {
            chkSelectAll.setEnabled(true);
        }
    }

    private Image scaledImage(byte[] img, int w, int h) {
        BufferedImage resizedImage = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB);
        try {
            Graphics2D g2 = resizedImage.createGraphics();
            g2.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
            ByteArrayInputStream in = new ByteArrayInputStream(img);
            BufferedImage bImageFromConvert = ImageIO.read(in);
            g2.drawImage(bImageFromConvert, 0, 0, w, h, null);
            g2.dispose();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
            ex.printStackTrace();
        }
        return resizedImage;
    }
    private void txtStudentRFIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStudentRFIDKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
        if (txtStudentRFID.getText().length() >= 10) {
            evt.consume();
        }
    }//GEN-LAST:event_txtStudentRFIDKeyTyped

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        int P = JOptionPane.showConfirmDialog(null, " Are you sure want to cancel?", "ATTENTION", JOptionPane.YES_NO_OPTION);
        if (P == JOptionPane.YES_OPTION) //(P==0) //YES FOR 0 NO FOR 1
        {
            reset();
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        int P = JOptionPane.showConfirmDialog(null, " Are you sure want to remove?", "ATTENTION", JOptionPane.YES_NO_OPTION);
        if (P == JOptionPane.YES_OPTION) //(P==0) //YES FOR 0 NO FOR 1
        {
            try {
                DefaultTableModel model = (DefaultTableModel) tblBorrowingBook.getModel();
                int rows = model.getRowCount();
                for (int x = rows - 1; x >= 0; x--) {
                    if ((Boolean) model.getValueAt(x, 0)) {
                        model.removeRow(x);
                    }
                }
                checkIfThereWasSelected();
                checkIftblBorrowBookIsEmptyOrNot();
                dcBorrowedUntil.setDate(null);
                txtBookRFID.requestFocus();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex);
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnBorrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrowActionPerformed
        validation();
    }//GEN-LAST:event_btnBorrowActionPerformed

    private void validation() {
        try {
            if (dcBorrowedUntil.getDate() == null) {
                JOptionPane.showMessageDialog(this, "No found Borrowed Until!", "ATTENTION", JOptionPane.ERROR_MESSAGE);
                dcBorrowedUntil.requestFocus();
            } else {
                TableModel model = tblBorrowingBook.getModel();
                int rows = model.getRowCount();
                for (int i = 0; i < rows; i++) {
                    if ((Boolean) model.getValueAt(i, 0)) {
                        pst = con.prepareStatement("SELECT * FROM tbl_books WHERE rfid = ?");
                        pst.setString(1, String.valueOf(model.getValueAt(i, 1)));
                        rs = pst.executeQuery();
                        if (rs.next()) {
                            book_id = rs.getInt("id");
                        }
                        inserting();
                    }
                }
                JOptionPane.showMessageDialog(this, "Successfully Borrowed!");
                reset();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
            ex.printStackTrace();
        }
    }

    private void inserting() {
        try {
            Date dateToday = new Date();
            SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            String convertedDate1 = simpleDateFormat.format(dateToday);
            String holder = dcBorrowedUntil.getDate().toString();
            SimpleDateFormat pattern = new SimpleDateFormat("E MMM dd HH:mm:ss z yyyy");
            Date myDate = pattern.parse(holder);
            java.sql.Date converted = new java.sql.Date(myDate.getTime());
            cst = con.prepareCall("{call sp_BorrowingBook(?, ?, ?, ?, ?, ?)}");
            cst.setInt("param_book_id", book_id);
            cst.setInt("param_student_id", student_id);
            cst.setString("param_borrowed_from_date", convertedDate1);
            cst.setDate("param_borrowed_until_date", converted);
            cst.setInt("param_lent_by", JFrame_Main.accountId);
            cst.setInt("param_received_by", 0);
            cst.execute();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
            ex.printStackTrace();
        }
    }
    private void chkSelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSelectAllActionPerformed
        lblTitle.requestFocus();
        TableModel model = tblBorrowingBook.getModel();
        int rows = model.getRowCount();
        boolean checked;
        for (int i = 0; i < rows; i++) {
            if (chkSelectAll.isSelected()) {
                checked = true;
                model.setValueAt(checked, i, 0);
            } else {
                checked = false;
                model.setValueAt(checked, i, 0);
            }
        }
        checkIfThereWasSelected();
    }//GEN-LAST:event_chkSelectAllActionPerformed
    private void checkIfThereWasSelected() {
        TableModel model = tblBorrowingBook.getModel();
        int rows = model.getRowCount();
        for (int i = 0; i < rows; i++) {
            if ((Boolean) model.getValueAt(i, 0) || !(Boolean) model.getValueAt(i, 0)) {
                boolean x = (boolean) model.getValueAt(i, 0);
                if (x == true) {
                    btnRemove.setEnabled(true);
                    btnBorrow.setEnabled(true);
                    dcBorrowedUntil.setEnabled(true);
                    break;
                } else {
                    btnRemove.setEnabled(false);
                    btnBorrow.setEnabled(false);
                    dcBorrowedUntil.setEnabled(false);
                    continue;
                }
            }
        }
    }
    private void tblBorrowingBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBorrowingBookMouseClicked
        checkIfThereWasSelected();
    }//GEN-LAST:event_tblBorrowingBookMouseClicked
    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("ICON.png")));
    }

    private void showDateAndTime() {
        Date d = new Date();
        SimpleDateFormat s = new SimpleDateFormat("MMMM dd, yyyy");
        lblDate.setText(s.format(d));
        new Timer(0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Date date = new Date();
                SimpleDateFormat simpleDateFormat = new SimpleDateFormat("hh:mm:ss a");
                lblTime.setText(simpleDateFormat.format(date));
                String dayToday = LocalDateTime.now().getDayOfWeek().toString();
                String convertToLowerCase = dayToday.toLowerCase();
                String output = convertToLowerCase.substring(0, 1).toUpperCase() + convertToLowerCase.substring(1);
                lblDay.setText(output);
            }
        }).start();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrame_BorrowBook.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrame_BorrowBook.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrame_BorrowBook.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame_BorrowBook.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrame_BorrowBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel JPANEL1;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBorrow;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnRemove;
    private javax.swing.JCheckBox chkSelectAll;
    public com.toedter.calendar.JDateChooser dcBorrowedUntil;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBookRFID;
    private javax.swing.JLabel lblBorrowedUntil;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDay;
    private javax.swing.JLabel lblFullName;
    private javax.swing.JLabel lblFullNameValue;
    private javax.swing.JLabel lblGradeLevel;
    private javax.swing.JLabel lblGradeLevelValue;
    public javax.swing.JLabel lblProfile;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblStatusValue;
    private javax.swing.JLabel lblStudentRFID;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTotalEntry;
    private javax.swing.JTable tblBorrowingBook;
    private javax.swing.JTextField txtBookRFID;
    private javax.swing.JTextField txtStudentRFID;
    // End of variables declaration//GEN-END:variables

}
