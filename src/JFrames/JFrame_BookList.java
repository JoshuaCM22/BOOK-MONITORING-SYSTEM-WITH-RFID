package JFrames;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import Connection.DatabaseConnection;
import static JFrames.Objects.con;
import static JFrames.Objects.cst;
import static JFrames.Objects.pst;
import static JFrames.Objects.rs;

/**
 *
 * @author Joshua C. Magoliman
 */
public class JFrame_BookList extends javax.swing.JFrame {

    /**
     * Creates new form JFrame_BookList
     */
    public static int subjectIdNumber, shelfIdNumber;

    public JFrame_BookList() {
        initComponents();
        DatabaseConnection dbc = DatabaseConnection.getDatabaseConnection();
        con = dbc.getConnection();
        setIcon();
        reset();
        setBooksInformationForTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPANEL1 = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        cmbFilter = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JTextField();
        lblTotalEntry = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        btnShelfList = new javax.swing.JButton();
        btnSubjectList = new javax.swing.JButton();
        jsp_BookList = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBookList = new javax.swing.JTable();
        btnAddNewBook = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1347, 614));

        JPANEL1.setBackground(java.awt.Color.white);
        JPANEL1.setDoubleBuffered(false);
        JPANEL1.setMaximumSize(null);

        btnBack.setBackground(new java.awt.Color(0, 153, 0));
        btnBack.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnBack.setForeground(java.awt.Color.white);
        btnBack.setText("BACK");
        btnBack.setBorderPainted(false);
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.setFocusPainted(false);
        btnBack.setFocusable(false);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        cmbFilter.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cmbFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "RFID", "Title", "Subject", "Authors", "Publisher", "Copyright Year", "Original Total Pages", "Current Total Pages", "Quantity", "Date", "Time", "Shelf", "Account Name" }));
        cmbFilter.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        cmbFilter.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbFilterItemStateChanged(evt);
            }
        });

        txtSearch.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtSearch.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });

        lblTotalEntry.setBackground(new java.awt.Color(51, 0, 102));
        lblTotalEntry.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTotalEntry.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTotalEntry.setText("TOTAL ENTRY:");
        lblTotalEntry.setInheritsPopupMenu(false);

        lblTitle.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblTitle.setText("BOOK LIST");

        btnShelfList.setBackground(new java.awt.Color(0, 153, 0));
        btnShelfList.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnShelfList.setForeground(java.awt.Color.white);
        btnShelfList.setText("SHELF LIST");
        btnShelfList.setBorderPainted(false);
        btnShelfList.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnShelfList.setFocusPainted(false);
        btnShelfList.setFocusable(false);
        btnShelfList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShelfListActionPerformed(evt);
            }
        });

        btnSubjectList.setBackground(new java.awt.Color(0, 153, 0));
        btnSubjectList.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnSubjectList.setForeground(java.awt.Color.white);
        btnSubjectList.setText("SUBJECT LIST");
        btnSubjectList.setBorderPainted(false);
        btnSubjectList.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSubjectList.setFocusPainted(false);
        btnSubjectList.setFocusable(false);
        btnSubjectList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubjectListActionPerformed(evt);
            }
        });

        tblBookList.setBackground(java.awt.Color.white);
        tblBookList.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        tblBookList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBookList.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblBookList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBookListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBookList);

        jsp_BookList.setViewportView(jScrollPane1);

        btnAddNewBook.setBackground(new java.awt.Color(0, 153, 0));
        btnAddNewBook.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnAddNewBook.setForeground(java.awt.Color.white);
        btnAddNewBook.setText("ADD NEW BOOK");
        btnAddNewBook.setBorderPainted(false);
        btnAddNewBook.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddNewBook.setFocusPainted(false);
        btnAddNewBook.setFocusable(false);
        btnAddNewBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewBookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JPANEL1Layout = new javax.swing.GroupLayout(JPANEL1);
        JPANEL1.setLayout(JPANEL1Layout);
        JPANEL1Layout.setHorizontalGroup(
            JPANEL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPANEL1Layout.createSequentialGroup()
                .addGroup(JPANEL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(JPANEL1Layout.createSequentialGroup()
                        .addGap(499, 499, 499)
                        .addComponent(btnShelfList, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(btnSubjectList, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JPANEL1Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(JPANEL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(JPANEL1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblTotalEntry))
                            .addGroup(JPANEL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jsp_BookList, javax.swing.GroupLayout.PREFERRED_SIZE, 1212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(JPANEL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(JPANEL1Layout.createSequentialGroup()
                                        .addGap(543, 543, 543)
                                        .addComponent(lblTitle))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JPANEL1Layout.createSequentialGroup()
                                        .addComponent(cmbFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(623, 623, 623)
                                        .addComponent(btnAddNewBook, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        JPANEL1Layout.setVerticalGroup(
            JPANEL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPANEL1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(lblTitle)
                .addGroup(JPANEL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddNewBook))
                .addGap(9, 9, 9)
                .addComponent(jsp_BookList, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(JPANEL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotalEntry)
                    .addComponent(btnBack))
                .addGap(24, 24, 24)
                .addGroup(JPANEL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSubjectList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnShelfList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JPANEL1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JPANEL1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
   private void reset() {
        txtSearch.setText("");
        this.txtSearch.requestFocus();
    }

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("ICON.png")));
    }

    private void setBooksInformationForTable() {
        try {
            int rows = 0;
            int rowIndex = 0;
            pst = con.prepareStatement("SELECT * FROM vw_getallbooks");
            rs = pst.executeQuery();
            if (rs.next()) {
                rs.last();
                rows = rs.getRow();
                rs.beforeFirst();
            }
            String[][] data = new String[rows][14];
            while (rs.next()) {
                data[rowIndex][0] = rs.getString(1);
                data[rowIndex][1] = rs.getString(2);
                data[rowIndex][2] = rs.getString(3);
                data[rowIndex][3] = rs.getString(4);
                data[rowIndex][4] = rs.getString(5);
                data[rowIndex][5] = rs.getString(6);
                data[rowIndex][6] = rs.getString(7);
                data[rowIndex][7] = rs.getString(8);
                data[rowIndex][8] = rs.getString(9);
                data[rowIndex][9] = rs.getString(10);
                data[rowIndex][10] = rs.getString(11);
                data[rowIndex][11] = rs.getString(12);
                data[rowIndex][12] = rs.getString(13);
                data[rowIndex][13] = rs.getString(14);
                rowIndex++;
            }
            String[] cols = {"ID", "RFID", "TITLE", "BUBJECT", "AUTHORS", "PUBLISHER", "COPYRIGHT YEAR", "ORIGINAL TOTAL PAGES", "CURRENT TOTAL PAGES", "QUANTITY", "DATE", "TIME", "SHELF", "ACCOUNT NAME"};
            DefaultTableModel model = new DefaultTableModel(data, cols);
            tblBookList.setRowHeight(25);
            tblBookList.setModel(model);
            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment(JLabel.CENTER);
            tblBookList.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
            tblBookList.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
            tblBookList.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
            tblBookList.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
            tblBookList.getColumnModel().getColumn(4).setCellRenderer(centerRenderer);
            tblBookList.getColumnModel().getColumn(5).setCellRenderer(centerRenderer);
            tblBookList.getColumnModel().getColumn(6).setCellRenderer(centerRenderer);
            tblBookList.getColumnModel().getColumn(7).setCellRenderer(centerRenderer);
            tblBookList.getColumnModel().getColumn(8).setCellRenderer(centerRenderer);
            tblBookList.getColumnModel().getColumn(9).setCellRenderer(centerRenderer);
            tblBookList.getColumnModel().getColumn(10).setCellRenderer(centerRenderer);
            tblBookList.getColumnModel().getColumn(11).setCellRenderer(centerRenderer);
            tblBookList.getColumnModel().getColumn(12).setCellRenderer(centerRenderer);
            tblBookList.getColumnModel().getColumn(13).setCellRenderer(centerRenderer);
            tblBookList.getColumnModel().getColumn(0).setWidth(0);
            tblBookList.getColumnModel().getColumn(0).setMinWidth(0);
            tblBookList.getColumnModel().getColumn(0).setMaxWidth(0);
            tblBookList.getColumnModel().getColumn(1).setPreferredWidth(250);
            tblBookList.getColumnModel().getColumn(2).setPreferredWidth(600);
            tblBookList.getColumnModel().getColumn(3).setPreferredWidth(300);
            tblBookList.getColumnModel().getColumn(4).setPreferredWidth(900);
            tblBookList.getColumnModel().getColumn(5).setPreferredWidth(600);
            tblBookList.getColumnModel().getColumn(6).setPreferredWidth(250);
            tblBookList.getColumnModel().getColumn(7).setPreferredWidth(200);
            tblBookList.getColumnModel().getColumn(8).setPreferredWidth(200);
            tblBookList.getColumnModel().getColumn(9).setPreferredWidth(200);
            tblBookList.getColumnModel().getColumn(10).setPreferredWidth(200);
            tblBookList.getColumnModel().getColumn(11).setPreferredWidth(200);
            tblBookList.getColumnModel().getColumn(12).setPreferredWidth(200);
            tblBookList.getColumnModel().getColumn(13).setPreferredWidth(300);
            tblBookList.setSelectionBackground(Color.ORANGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
            ex.printStackTrace();
        }
        this.lblTotalEntry.setText("TOTAL ENTRY: " + tblBookList.getRowCount());
    }
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.setVisible(false);
        JFrame_Main nextFrame = new JFrame_Main();
        nextFrame.setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        String stringHolder = (String) cmbFilter.getSelectedItem();
        char c = evt.getKeyChar();
        switch (stringHolder) {
            case "None":
                if (!(Character.isAlphabetic(c) || Character.isDigit(c) || c == KeyEvent.VK_DELETE || Character.isWhitespace(c))) {
                    evt.consume();
                }
                if (txtSearch.getText().length() >= 10) {
                    evt.consume();
                }
                break;
            case "RFID":
                if (!(Character.isDigit(c) || c == KeyEvent.VK_DELETE)) {
                    evt.consume();
                }
                if (txtSearch.getText().length() >= 10) {
                    evt.consume();
                }
                break;
            case "Title":
                if (txtSearch.getText().length() >= 58) {
                    evt.consume();
                }
                break;
            case "Subject":
                if (txtSearch.getText().length() >= 18) {
                    evt.consume();
                }
                break;
            case "Copyright Year":
                if (txtSearch.getText().length() >= 43) {
                    evt.consume();
                }
                break;
            case "Original Total Pages":
                if (!(Character.isDigit(c) || c == KeyEvent.VK_DELETE)) {
                    evt.consume();
                }
                if (txtSearch.getText().length() >= 4) {
                    evt.consume();
                }
                break;
            case "Current Total Pages":
                if (!(Character.isDigit(c) || c == KeyEvent.VK_DELETE)) {
                    evt.consume();
                }
                if (txtSearch.getText().length() >= 4) {
                    evt.consume();
                }
                break;
            case "Quantity":
                if (!(Character.isDigit(c) || c == KeyEvent.VK_DELETE)) {
                    evt.consume();
                }
                if (txtSearch.getText().length() >= 6) {
                    evt.consume();
                }
                break;
            case "Date":
                if (txtSearch.getText().length() >= 8) {
                    evt.consume();
                }
                break;
            case "Time":
                if (txtSearch.getText().length() >= 9) {
                    evt.consume();
                }
                break;
            case "Shelf":
                if (txtSearch.getText().length() >= 18) {
                    evt.consume();
                }
                break;
            case "Account Name":
                if (txtSearch.getText().length() >= 43) {
                    evt.consume();
                }
                break;
        }
    }//GEN-LAST:event_txtSearchKeyTyped

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        if (txtSearch.getText().equals("")) {
            setBooksInformationForTable();
        } else {
            searching();
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnShelfListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShelfListActionPerformed
        this.hide();
        JFrame_ShelfList nextFrame = new JFrame_ShelfList();
        nextFrame.show();
    }//GEN-LAST:event_btnShelfListActionPerformed

    private void btnSubjectListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubjectListActionPerformed
        this.hide();
        JFrame_SubjectList nextFrame = new JFrame_SubjectList();
        nextFrame.show();
    }//GEN-LAST:event_btnSubjectListActionPerformed

    private void btnAddNewBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewBookActionPerformed
        this.hide();
        JFrame_BookAdd nextFrame = new JFrame_BookAdd();
        nextFrame.show();
    }//GEN-LAST:event_btnAddNewBookActionPerformed

    private void tblBookListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBookListMouseClicked
        retrieveBookInformations();
    }//GEN-LAST:event_tblBookListMouseClicked

    private void cmbFilterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbFilterItemStateChanged
        txtSearch.requestFocus();
    }//GEN-LAST:event_cmbFilterItemStateChanged

    private void retrieveBookInformations() {
        try {
            int bookId = Integer.parseInt((this.tblBookList.getValueAt(this.tblBookList.getSelectedRow(), 0).toString()));
            pst = con.prepareStatement("SELECT * FROM tbl_books WHERE id = ?");
            pst.setInt(1, bookId);
            rs = pst.executeQuery();
            if (rs.next()) {
                JFrame frame = this;
                frame.setEnabled(false);
                JFrame_BookProfile nextFrame = new JFrame_BookProfile();
                btnBack.setVisible(false);
                btnAddNewBook.setVisible(false);
                btnSubjectList.setVisible(false);
                btnShelfList.setVisible(false);
                cmbFilter.setVisible(false);
                txtSearch.setVisible(false);
                nextFrame.setLocationRelativeTo(this);
                nextFrame.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                        if (txtSearch.getText().equals("")) {
                            setBooksInformationForTable();
                        } else {
                            searching();
                        }
                        frame.setEnabled(true);
                        frame.toFront();
                        btnBack.setVisible(true);
                        btnAddNewBook.setVisible(true);
                        btnSubjectList.setVisible(true);
                        btnShelfList.setVisible(true);
                        cmbFilter.setVisible(true);
                        txtSearch.setVisible(true);
                        txtSearch.requestFocus();
                    }
                });
                nextFrame.txtRFID.setText(rs.getString(2));
                nextFrame.txtTitle.setText(rs.getString(3));
                subjectIdNumber = rs.getInt(4);
                nextFrame.txtareaAuthors.setText(rs.getString(5));
                nextFrame.txtareaPublisher.setText(rs.getString(6));
                nextFrame.txtCopyrightYear.setText(rs.getString(7));
                nextFrame.txtOriginalTotalPages.setText(rs.getInt(8) + "");
                nextFrame.txtCurrentTotalPages.setText(rs.getInt(9) + "");
                nextFrame.txtQuantity.setText(rs.getInt(10) + "");
                shelfIdNumber = rs.getInt(13);
                nextFrame.retrieveSubjects();
                nextFrame.retrieveShelfs();
                nextFrame.toFront();
                nextFrame.setVisible(true);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
            ex.printStackTrace();
        }
    }

    private void searching() {
        int rows = 0;
        int rowIndex = 0;
        try {
            if (cmbFilter.getSelectedItem().equals("None")) {
                setBooksInformationForTable();
            } else if (cmbFilter.getSelectedItem().equals("RFID")) {
                cst = con.prepareCall("{call sp_GetBookByRFID(?)}");
                cst.setString("param_RFID", "%" + txtSearch.getText() + "%");
                rs = cst.executeQuery();
                if (rs.next()) {
                    rs.last();
                    rows = rs.getRow();
                    rs.beforeFirst();
                }
                String[][] data = new String[rows][14];
                while (rs.next()) {
                    data[rowIndex][0] = rs.getString(1);
                    data[rowIndex][1] = rs.getString(2);
                    data[rowIndex][2] = rs.getString(3);
                    data[rowIndex][3] = rs.getString(4);
                    data[rowIndex][4] = rs.getString(5);
                    data[rowIndex][5] = rs.getString(6);
                    data[rowIndex][6] = rs.getString(7);
                    data[rowIndex][7] = rs.getString(8);
                    data[rowIndex][8] = rs.getString(9);
                    data[rowIndex][9] = rs.getString(10);
                    data[rowIndex][10] = rs.getString(11);
                    data[rowIndex][11] = rs.getString(12);
                    data[rowIndex][12] = rs.getString(13);
                    data[rowIndex][13] = rs.getString(14);
                    rowIndex++;
                }
                String[] cols = {"ID", "RFID", "TITLE", "BUBJECT", "AUTHORS", "PUBLISHER", "COPYRIGHT YEAR", "ORIGINAL TOTAL PAGES", "CURRENT TOTAL PAGES", "QUANTITY", "DATE", "TIME", "SHELF", "ACCOUNT NAME"};
                DefaultTableModel model = new DefaultTableModel(data, cols);
                tblBookList.setRowHeight(25);
                tblBookList.setModel(model);
                DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                centerRenderer.setHorizontalAlignment(JLabel.CENTER);
                tblBookList.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(4).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(5).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(6).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(7).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(8).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(9).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(10).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(11).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(12).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(13).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(0).setWidth(0);
                tblBookList.getColumnModel().getColumn(0).setMinWidth(0);
                tblBookList.getColumnModel().getColumn(0).setMaxWidth(0);
                tblBookList.getColumnModel().getColumn(1).setPreferredWidth(250);
                tblBookList.getColumnModel().getColumn(2).setPreferredWidth(600);
                tblBookList.getColumnModel().getColumn(3).setPreferredWidth(300);
                tblBookList.getColumnModel().getColumn(4).setPreferredWidth(900);
                tblBookList.getColumnModel().getColumn(5).setPreferredWidth(600);
                tblBookList.getColumnModel().getColumn(6).setPreferredWidth(250);
                tblBookList.getColumnModel().getColumn(7).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(8).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(9).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(10).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(11).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(12).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(13).setPreferredWidth(300);
                tblBookList.setSelectionBackground(Color.ORANGE);
            } else if (cmbFilter.getSelectedItem().equals("Title")) {
                cst = con.prepareCall("{call sp_GetBookByTitle(?)}");
                cst.setString("param_Title", "%" + txtSearch.getText() + "%");
                rs = cst.executeQuery();
                if (rs.next()) {
                    rs.last();
                    rows = rs.getRow();
                    rs.beforeFirst();
                }
                String[][] data = new String[rows][14];
                while (rs.next()) {
                    data[rowIndex][0] = rs.getString(1);
                    data[rowIndex][1] = rs.getString(2);
                    data[rowIndex][2] = rs.getString(3);
                    data[rowIndex][3] = rs.getString(4);
                    data[rowIndex][4] = rs.getString(5);
                    data[rowIndex][5] = rs.getString(6);
                    data[rowIndex][6] = rs.getString(7);
                    data[rowIndex][7] = rs.getString(8);
                    data[rowIndex][8] = rs.getString(9);
                    data[rowIndex][9] = rs.getString(10);
                    data[rowIndex][10] = rs.getString(11);
                    data[rowIndex][11] = rs.getString(12);
                    data[rowIndex][12] = rs.getString(13);
                    data[rowIndex][13] = rs.getString(14);
                    rowIndex++;
                }
                String[] cols = {"ID", "RFID", "TITLE", "BUBJECT", "AUTHORS", "PUBLISHER", "COPYRIGHT YEAR", "ORIGINAL TOTAL PAGES", "CURRENT TOTAL PAGES", "QUANTITY", "DATE", "TIME", "SHELF", "ACCOUNT NAME"};
                DefaultTableModel model = new DefaultTableModel(data, cols);
                tblBookList.setRowHeight(25);
                tblBookList.setModel(model);
                DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                centerRenderer.setHorizontalAlignment(JLabel.CENTER);
                tblBookList.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(4).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(5).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(6).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(7).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(8).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(9).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(10).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(11).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(12).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(13).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(0).setWidth(0);
                tblBookList.getColumnModel().getColumn(0).setMinWidth(0);
                tblBookList.getColumnModel().getColumn(0).setMaxWidth(0);
                tblBookList.getColumnModel().getColumn(1).setPreferredWidth(250);
                tblBookList.getColumnModel().getColumn(2).setPreferredWidth(600);
                tblBookList.getColumnModel().getColumn(3).setPreferredWidth(300);
                tblBookList.getColumnModel().getColumn(4).setPreferredWidth(900);
                tblBookList.getColumnModel().getColumn(5).setPreferredWidth(600);
                tblBookList.getColumnModel().getColumn(6).setPreferredWidth(250);
                tblBookList.getColumnModel().getColumn(7).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(8).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(9).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(10).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(11).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(12).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(13).setPreferredWidth(300);
                tblBookList.setSelectionBackground(Color.ORANGE);
            } else if (cmbFilter.getSelectedItem().equals("Subject")) {
                cst = con.prepareCall("{call sp_GetBookBySubject(?)}");
                cst.setString("param_Subject", "%" + txtSearch.getText() + "%");
                rs = cst.executeQuery();
                if (rs.next()) {
                    rs.last();
                    rows = rs.getRow();
                    rs.beforeFirst();
                }
                String[][] data = new String[rows][14];
                while (rs.next()) {
                    data[rowIndex][0] = rs.getString(1);
                    data[rowIndex][1] = rs.getString(2);
                    data[rowIndex][2] = rs.getString(3);
                    data[rowIndex][3] = rs.getString(4);
                    data[rowIndex][4] = rs.getString(5);
                    data[rowIndex][5] = rs.getString(6);
                    data[rowIndex][6] = rs.getString(7);
                    data[rowIndex][7] = rs.getString(8);
                    data[rowIndex][8] = rs.getString(9);
                    data[rowIndex][9] = rs.getString(10);
                    data[rowIndex][10] = rs.getString(11);
                    data[rowIndex][11] = rs.getString(12);
                    data[rowIndex][12] = rs.getString(13);
                    data[rowIndex][13] = rs.getString(14);
                    rowIndex++;
                }
                String[] cols = {"ID", "RFID", "TITLE", "BUBJECT", "AUTHORS", "PUBLISHER", "COPYRIGHT YEAR", "ORIGINAL TOTAL PAGES", "CURRENT TOTAL PAGES", "QUANTITY", "DATE", "TIME", "SHELF", "ACCOUNT NAME"};
                DefaultTableModel model = new DefaultTableModel(data, cols);
                tblBookList.setRowHeight(25);
                tblBookList.setModel(model);
                DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                centerRenderer.setHorizontalAlignment(JLabel.CENTER);
                tblBookList.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(4).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(5).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(6).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(7).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(8).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(9).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(10).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(11).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(12).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(13).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(0).setWidth(0);
                tblBookList.getColumnModel().getColumn(0).setMinWidth(0);
                tblBookList.getColumnModel().getColumn(0).setMaxWidth(0);
                tblBookList.getColumnModel().getColumn(1).setPreferredWidth(250);
                tblBookList.getColumnModel().getColumn(2).setPreferredWidth(600);
                tblBookList.getColumnModel().getColumn(3).setPreferredWidth(300);
                tblBookList.getColumnModel().getColumn(4).setPreferredWidth(900);
                tblBookList.getColumnModel().getColumn(5).setPreferredWidth(600);
                tblBookList.getColumnModel().getColumn(6).setPreferredWidth(250);
                tblBookList.getColumnModel().getColumn(7).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(8).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(9).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(10).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(11).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(12).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(13).setPreferredWidth(300);
                tblBookList.setSelectionBackground(Color.ORANGE);
            } else if (cmbFilter.getSelectedItem().equals("Authors")) {
                cst = con.prepareCall("{call sp_GetBookByAuthors(?)}");
                cst.setString("param_Authors", "%" + txtSearch.getText() + "%");
                rs = cst.executeQuery();
                if (rs.next()) {
                    rs.last();
                    rows = rs.getRow();
                    rs.beforeFirst();
                }
                String[][] data = new String[rows][14];
                while (rs.next()) {
                    data[rowIndex][0] = rs.getString(1);
                    data[rowIndex][1] = rs.getString(2);
                    data[rowIndex][2] = rs.getString(3);
                    data[rowIndex][3] = rs.getString(4);
                    data[rowIndex][4] = rs.getString(5);
                    data[rowIndex][5] = rs.getString(6);
                    data[rowIndex][6] = rs.getString(7);
                    data[rowIndex][7] = rs.getString(8);
                    data[rowIndex][8] = rs.getString(9);
                    data[rowIndex][9] = rs.getString(10);
                    data[rowIndex][10] = rs.getString(11);
                    data[rowIndex][11] = rs.getString(12);
                    data[rowIndex][12] = rs.getString(13);
                    data[rowIndex][13] = rs.getString(14);
                    rowIndex++;
                }
                String[] cols = {"ID", "RFID", "TITLE", "BUBJECT", "AUTHORS", "PUBLISHER", "COPYRIGHT YEAR", "ORIGINAL TOTAL PAGES", "CURRENT TOTAL PAGES", "QUANTITY", "DATE", "TIME", "SHELF", "ACCOUNT NAME"};
                DefaultTableModel model = new DefaultTableModel(data, cols);
                tblBookList.setRowHeight(25);
                tblBookList.setModel(model);
                DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                centerRenderer.setHorizontalAlignment(JLabel.CENTER);
                tblBookList.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(4).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(5).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(6).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(7).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(8).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(9).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(10).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(11).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(12).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(13).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(0).setWidth(0);
                tblBookList.getColumnModel().getColumn(0).setMinWidth(0);
                tblBookList.getColumnModel().getColumn(0).setMaxWidth(0);
                tblBookList.getColumnModel().getColumn(1).setPreferredWidth(250);
                tblBookList.getColumnModel().getColumn(2).setPreferredWidth(600);
                tblBookList.getColumnModel().getColumn(3).setPreferredWidth(300);
                tblBookList.getColumnModel().getColumn(4).setPreferredWidth(900);
                tblBookList.getColumnModel().getColumn(5).setPreferredWidth(600);
                tblBookList.getColumnModel().getColumn(6).setPreferredWidth(250);
                tblBookList.getColumnModel().getColumn(7).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(8).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(9).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(10).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(11).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(12).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(13).setPreferredWidth(300);
                tblBookList.setSelectionBackground(Color.ORANGE);
            } else if (cmbFilter.getSelectedItem().equals("Publisher")) {
                cst = con.prepareCall("{call sp_GetBookByPublisher(?)}");
                cst.setString("param_Publisher", "%" + txtSearch.getText() + "%");
                rs = cst.executeQuery();
                if (rs.next()) {
                    rs.last();
                    rows = rs.getRow();
                    rs.beforeFirst();
                }
                String[][] data = new String[rows][14];
                while (rs.next()) {
                    data[rowIndex][0] = rs.getString(1);
                    data[rowIndex][1] = rs.getString(2);
                    data[rowIndex][2] = rs.getString(3);
                    data[rowIndex][3] = rs.getString(4);
                    data[rowIndex][4] = rs.getString(5);
                    data[rowIndex][5] = rs.getString(6);
                    data[rowIndex][6] = rs.getString(7);
                    data[rowIndex][7] = rs.getString(8);
                    data[rowIndex][8] = rs.getString(9);
                    data[rowIndex][9] = rs.getString(10);
                    data[rowIndex][10] = rs.getString(11);
                    data[rowIndex][11] = rs.getString(12);
                    data[rowIndex][12] = rs.getString(13);
                    data[rowIndex][13] = rs.getString(14);
                    rowIndex++;
                }
                String[] cols = {"ID", "RFID", "TITLE", "BUBJECT", "AUTHORS", "PUBLISHER", "COPYRIGHT YEAR", "ORIGINAL TOTAL PAGES", "CURRENT TOTAL PAGES", "QUANTITY", "DATE", "TIME", "SHELF", "ACCOUNT NAME"};
                DefaultTableModel model = new DefaultTableModel(data, cols);
                tblBookList.setRowHeight(25);
                tblBookList.setModel(model);
                DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                centerRenderer.setHorizontalAlignment(JLabel.CENTER);
                tblBookList.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(4).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(5).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(6).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(7).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(8).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(9).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(10).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(11).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(12).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(13).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(0).setWidth(0);
                tblBookList.getColumnModel().getColumn(0).setMinWidth(0);
                tblBookList.getColumnModel().getColumn(0).setMaxWidth(0);
                tblBookList.getColumnModel().getColumn(1).setPreferredWidth(250);
                tblBookList.getColumnModel().getColumn(2).setPreferredWidth(600);
                tblBookList.getColumnModel().getColumn(3).setPreferredWidth(300);
                tblBookList.getColumnModel().getColumn(4).setPreferredWidth(900);
                tblBookList.getColumnModel().getColumn(5).setPreferredWidth(600);
                tblBookList.getColumnModel().getColumn(6).setPreferredWidth(250);
                tblBookList.getColumnModel().getColumn(7).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(8).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(9).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(10).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(11).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(12).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(13).setPreferredWidth(300);
                tblBookList.setSelectionBackground(Color.ORANGE);
            } else if (cmbFilter.getSelectedItem().equals("Copyright Year")) {
                cst = con.prepareCall("{call sp_GetBookByCopyrightYear(?)}");
                cst.setString("param_CopyrightYear", "%" + txtSearch.getText() + "%");
                rs = cst.executeQuery();
                if (rs.next()) {
                    rs.last();
                    rows = rs.getRow();
                    rs.beforeFirst();
                }
                String[][] data = new String[rows][14];
                while (rs.next()) {
                    data[rowIndex][0] = rs.getString(1);
                    data[rowIndex][1] = rs.getString(2);
                    data[rowIndex][2] = rs.getString(3);
                    data[rowIndex][3] = rs.getString(4);
                    data[rowIndex][4] = rs.getString(5);
                    data[rowIndex][5] = rs.getString(6);
                    data[rowIndex][6] = rs.getString(7);
                    data[rowIndex][7] = rs.getString(8);
                    data[rowIndex][8] = rs.getString(9);
                    data[rowIndex][9] = rs.getString(10);
                    data[rowIndex][10] = rs.getString(11);
                    data[rowIndex][11] = rs.getString(12);
                    data[rowIndex][12] = rs.getString(13);
                    data[rowIndex][13] = rs.getString(14);
                    rowIndex++;
                }
                String[] cols = {"ID", "RFID", "TITLE", "BUBJECT", "AUTHORS", "PUBLISHER", "COPYRIGHT YEAR", "ORIGINAL TOTAL PAGES", "CURRENT TOTAL PAGES", "QUANTITY", "DATE", "TIME", "SHELF", "ACCOUNT NAME"};
                DefaultTableModel model = new DefaultTableModel(data, cols);
                tblBookList.setRowHeight(25);
                tblBookList.setModel(model);
                DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                centerRenderer.setHorizontalAlignment(JLabel.CENTER);
                tblBookList.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(4).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(5).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(6).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(7).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(8).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(9).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(10).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(11).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(12).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(13).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(0).setWidth(0);
                tblBookList.getColumnModel().getColumn(0).setMinWidth(0);
                tblBookList.getColumnModel().getColumn(0).setMaxWidth(0);
                tblBookList.getColumnModel().getColumn(1).setPreferredWidth(250);
                tblBookList.getColumnModel().getColumn(2).setPreferredWidth(600);
                tblBookList.getColumnModel().getColumn(3).setPreferredWidth(300);
                tblBookList.getColumnModel().getColumn(4).setPreferredWidth(900);
                tblBookList.getColumnModel().getColumn(5).setPreferredWidth(600);
                tblBookList.getColumnModel().getColumn(6).setPreferredWidth(250);
                tblBookList.getColumnModel().getColumn(7).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(8).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(9).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(10).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(11).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(12).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(13).setPreferredWidth(300);
                tblBookList.setSelectionBackground(Color.ORANGE);
            } else if (cmbFilter.getSelectedItem().equals("Original Total Pages")) {
                cst = con.prepareCall("{call sp_GetBookByOriginalTotalPages(?)}");
                cst.setString("param_OriginalTotalPages", txtSearch.getText());
                rs = cst.executeQuery();
                if (rs.next()) {
                    rs.last();
                    rows = rs.getRow();
                    rs.beforeFirst();
                }
                String[][] data = new String[rows][14];
                while (rs.next()) {
                    data[rowIndex][0] = rs.getString(1);
                    data[rowIndex][1] = rs.getString(2);
                    data[rowIndex][2] = rs.getString(3);
                    data[rowIndex][3] = rs.getString(4);
                    data[rowIndex][4] = rs.getString(5);
                    data[rowIndex][5] = rs.getString(6);
                    data[rowIndex][6] = rs.getString(7);
                    data[rowIndex][7] = rs.getString(8);
                    data[rowIndex][8] = rs.getString(9);
                    data[rowIndex][9] = rs.getString(10);
                    data[rowIndex][10] = rs.getString(11);
                    data[rowIndex][11] = rs.getString(12);
                    data[rowIndex][12] = rs.getString(13);
                    data[rowIndex][13] = rs.getString(14);
                    rowIndex++;
                }
                String[] cols = {"ID", "RFID", "TITLE", "BUBJECT", "AUTHORS", "PUBLISHER", "COPYRIGHT YEAR", "ORIGINAL TOTAL PAGES", "CURRENT TOTAL PAGES", "QUANTITY", "DATE", "TIME", "SHELF", "ACCOUNT NAME"};
                DefaultTableModel model = new DefaultTableModel(data, cols);
                tblBookList.setRowHeight(25);
                tblBookList.setModel(model);
                DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                centerRenderer.setHorizontalAlignment(JLabel.CENTER);
                tblBookList.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(4).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(5).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(6).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(7).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(8).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(9).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(10).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(11).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(12).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(13).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(0).setWidth(0);
                tblBookList.getColumnModel().getColumn(0).setMinWidth(0);
                tblBookList.getColumnModel().getColumn(0).setMaxWidth(0);
                tblBookList.getColumnModel().getColumn(1).setPreferredWidth(250);
                tblBookList.getColumnModel().getColumn(2).setPreferredWidth(600);
                tblBookList.getColumnModel().getColumn(3).setPreferredWidth(300);
                tblBookList.getColumnModel().getColumn(4).setPreferredWidth(900);
                tblBookList.getColumnModel().getColumn(5).setPreferredWidth(600);
                tblBookList.getColumnModel().getColumn(6).setPreferredWidth(250);
                tblBookList.getColumnModel().getColumn(7).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(8).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(9).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(10).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(11).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(12).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(13).setPreferredWidth(300);
                tblBookList.setSelectionBackground(Color.ORANGE);
            } else if (cmbFilter.getSelectedItem().equals("Current Total Pages")) {
                cst = con.prepareCall("{call sp_GetBookByCurrentTotalPages(?)}");
                cst.setString("param_CurrentTotalPages", txtSearch.getText());
                rs = cst.executeQuery();
                if (rs.next()) {
                    rs.last();
                    rows = rs.getRow();
                    rs.beforeFirst();
                }
                String[][] data = new String[rows][14];
                while (rs.next()) {
                    data[rowIndex][0] = rs.getString(1);
                    data[rowIndex][1] = rs.getString(2);
                    data[rowIndex][2] = rs.getString(3);
                    data[rowIndex][3] = rs.getString(4);
                    data[rowIndex][4] = rs.getString(5);
                    data[rowIndex][5] = rs.getString(6);
                    data[rowIndex][6] = rs.getString(7);
                    data[rowIndex][7] = rs.getString(8);
                    data[rowIndex][8] = rs.getString(9);
                    data[rowIndex][9] = rs.getString(10);
                    data[rowIndex][10] = rs.getString(11);
                    data[rowIndex][11] = rs.getString(12);
                    data[rowIndex][12] = rs.getString(13);
                    data[rowIndex][13] = rs.getString(14);
                    rowIndex++;
                }
                String[] cols = {"ID", "RFID", "TITLE", "BUBJECT", "AUTHORS", "PUBLISHER", "COPYRIGHT YEAR", "ORIGINAL TOTAL PAGES", "CURRENT TOTAL PAGES", "QUANTITY", "DATE", "TIME", "SHELF", "ACCOUNT NAME"};
                DefaultTableModel model = new DefaultTableModel(data, cols);
                tblBookList.setRowHeight(25);
                tblBookList.setModel(model);
                DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                centerRenderer.setHorizontalAlignment(JLabel.CENTER);
                tblBookList.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(4).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(5).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(6).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(7).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(8).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(9).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(10).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(11).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(12).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(13).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(0).setWidth(0);
                tblBookList.getColumnModel().getColumn(0).setMinWidth(0);
                tblBookList.getColumnModel().getColumn(0).setMaxWidth(0);
                tblBookList.getColumnModel().getColumn(1).setPreferredWidth(250);
                tblBookList.getColumnModel().getColumn(2).setPreferredWidth(600);
                tblBookList.getColumnModel().getColumn(3).setPreferredWidth(300);
                tblBookList.getColumnModel().getColumn(4).setPreferredWidth(900);
                tblBookList.getColumnModel().getColumn(5).setPreferredWidth(600);
                tblBookList.getColumnModel().getColumn(6).setPreferredWidth(250);
                tblBookList.getColumnModel().getColumn(7).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(8).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(9).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(10).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(11).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(12).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(13).setPreferredWidth(300);
                tblBookList.setSelectionBackground(Color.ORANGE);
            } else if (cmbFilter.getSelectedItem().equals("Quantity")) {
                cst = con.prepareCall("{call sp_GetBookByQuantity(?)}");
                cst.setString("param_Quantity", txtSearch.getText());
                rs = cst.executeQuery();
                if (rs.next()) {
                    rs.last();
                    rows = rs.getRow();
                    rs.beforeFirst();
                }
                String[][] data = new String[rows][14];
                while (rs.next()) {
                    data[rowIndex][0] = rs.getString(1);
                    data[rowIndex][1] = rs.getString(2);
                    data[rowIndex][2] = rs.getString(3);
                    data[rowIndex][3] = rs.getString(4);
                    data[rowIndex][4] = rs.getString(5);
                    data[rowIndex][5] = rs.getString(6);
                    data[rowIndex][6] = rs.getString(7);
                    data[rowIndex][7] = rs.getString(8);
                    data[rowIndex][8] = rs.getString(9);
                    data[rowIndex][9] = rs.getString(10);
                    data[rowIndex][10] = rs.getString(11);
                    data[rowIndex][11] = rs.getString(12);
                    data[rowIndex][12] = rs.getString(13);
                    data[rowIndex][13] = rs.getString(14);
                    rowIndex++;
                }
                String[] cols = {"ID", "RFID", "TITLE", "BUBJECT", "AUTHORS", "PUBLISHER", "COPYRIGHT YEAR", "ORIGINAL TOTAL PAGES", "CURRENT TOTAL PAGES", "QUANTITY", "DATE", "TIME", "SHELF", "ACCOUNT NAME"};
                DefaultTableModel model = new DefaultTableModel(data, cols);
                tblBookList.setRowHeight(25);
                tblBookList.setModel(model);
                DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                centerRenderer.setHorizontalAlignment(JLabel.CENTER);
                tblBookList.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(4).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(5).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(6).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(7).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(8).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(9).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(10).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(11).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(12).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(13).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(0).setWidth(0);
                tblBookList.getColumnModel().getColumn(0).setMinWidth(0);
                tblBookList.getColumnModel().getColumn(0).setMaxWidth(0);
                tblBookList.getColumnModel().getColumn(1).setPreferredWidth(250);
                tblBookList.getColumnModel().getColumn(2).setPreferredWidth(600);
                tblBookList.getColumnModel().getColumn(3).setPreferredWidth(300);
                tblBookList.getColumnModel().getColumn(4).setPreferredWidth(900);
                tblBookList.getColumnModel().getColumn(5).setPreferredWidth(600);
                tblBookList.getColumnModel().getColumn(6).setPreferredWidth(250);
                tblBookList.getColumnModel().getColumn(7).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(8).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(9).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(10).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(11).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(12).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(13).setPreferredWidth(300);
                tblBookList.setSelectionBackground(Color.ORANGE);
            } else if (cmbFilter.getSelectedItem().equals("Date")) {
                cst = con.prepareCall("{call sp_GetBookByDate(?)}");
                cst.setString("param_Date", "%" + txtSearch.getText() + "%");
                rs = cst.executeQuery();
                if (rs.next()) {
                    rs.last();
                    rows = rs.getRow();
                    rs.beforeFirst();
                }
                String[][] data = new String[rows][14];
                while (rs.next()) {
                    data[rowIndex][0] = rs.getString(1);
                    data[rowIndex][1] = rs.getString(2);
                    data[rowIndex][2] = rs.getString(3);
                    data[rowIndex][3] = rs.getString(4);
                    data[rowIndex][4] = rs.getString(5);
                    data[rowIndex][5] = rs.getString(6);
                    data[rowIndex][6] = rs.getString(7);
                    data[rowIndex][7] = rs.getString(8);
                    data[rowIndex][8] = rs.getString(9);
                    data[rowIndex][9] = rs.getString(10);
                    data[rowIndex][10] = rs.getString(11);
                    data[rowIndex][11] = rs.getString(12);
                    data[rowIndex][12] = rs.getString(13);
                    data[rowIndex][13] = rs.getString(14);
                    rowIndex++;
                }
                String[] cols = {"ID", "RFID", "TITLE", "BUBJECT", "AUTHORS", "PUBLISHER", "COPYRIGHT YEAR", "ORIGINAL TOTAL PAGES", "CURRENT TOTAL PAGES", "QUANTITY", "DATE", "TIME", "SHELF", "ACCOUNT NAME"};
                DefaultTableModel model = new DefaultTableModel(data, cols);
                tblBookList.setRowHeight(25);
                tblBookList.setModel(model);
                DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                centerRenderer.setHorizontalAlignment(JLabel.CENTER);
                tblBookList.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(4).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(5).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(6).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(7).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(8).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(9).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(10).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(11).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(12).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(13).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(0).setWidth(0);
                tblBookList.getColumnModel().getColumn(0).setMinWidth(0);
                tblBookList.getColumnModel().getColumn(0).setMaxWidth(0);
                tblBookList.getColumnModel().getColumn(1).setPreferredWidth(250);
                tblBookList.getColumnModel().getColumn(2).setPreferredWidth(600);
                tblBookList.getColumnModel().getColumn(3).setPreferredWidth(300);
                tblBookList.getColumnModel().getColumn(4).setPreferredWidth(900);
                tblBookList.getColumnModel().getColumn(5).setPreferredWidth(600);
                tblBookList.getColumnModel().getColumn(6).setPreferredWidth(250);
                tblBookList.getColumnModel().getColumn(7).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(8).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(9).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(10).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(11).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(12).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(13).setPreferredWidth(300);
                tblBookList.setSelectionBackground(Color.ORANGE);
            } else if (cmbFilter.getSelectedItem().equals("Time")) {
                cst = con.prepareCall("{call sp_GetBookByTime(?)}");
                cst.setString("param_Time", "%" + txtSearch.getText() + "%");
                rs = cst.executeQuery();
                if (rs.next()) {
                    rs.last();
                    rows = rs.getRow();
                    rs.beforeFirst();
                }
                String[][] data = new String[rows][14];
                while (rs.next()) {
                    data[rowIndex][0] = rs.getString(1);
                    data[rowIndex][1] = rs.getString(2);
                    data[rowIndex][2] = rs.getString(3);
                    data[rowIndex][3] = rs.getString(4);
                    data[rowIndex][4] = rs.getString(5);
                    data[rowIndex][5] = rs.getString(6);
                    data[rowIndex][6] = rs.getString(7);
                    data[rowIndex][7] = rs.getString(8);
                    data[rowIndex][8] = rs.getString(9);
                    data[rowIndex][9] = rs.getString(10);
                    data[rowIndex][10] = rs.getString(11);
                    data[rowIndex][11] = rs.getString(12);
                    data[rowIndex][12] = rs.getString(13);
                    data[rowIndex][13] = rs.getString(14);
                    rowIndex++;
                }
                String[] cols = {"ID", "RFID", "TITLE", "BUBJECT", "AUTHORS", "PUBLISHER", "COPYRIGHT YEAR", "ORIGINAL TOTAL PAGES", "CURRENT TOTAL PAGES", "QUANTITY", "DATE", "TIME", "SHELF", "ACCOUNT NAME"};
                DefaultTableModel model = new DefaultTableModel(data, cols);
                tblBookList.setRowHeight(25);
                tblBookList.setModel(model);
                DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                centerRenderer.setHorizontalAlignment(JLabel.CENTER);
                tblBookList.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(4).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(5).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(6).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(7).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(8).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(9).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(10).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(11).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(12).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(13).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(0).setWidth(0);
                tblBookList.getColumnModel().getColumn(0).setMinWidth(0);
                tblBookList.getColumnModel().getColumn(0).setMaxWidth(0);
                tblBookList.getColumnModel().getColumn(1).setPreferredWidth(250);
                tblBookList.getColumnModel().getColumn(2).setPreferredWidth(600);
                tblBookList.getColumnModel().getColumn(3).setPreferredWidth(300);
                tblBookList.getColumnModel().getColumn(4).setPreferredWidth(900);
                tblBookList.getColumnModel().getColumn(5).setPreferredWidth(600);
                tblBookList.getColumnModel().getColumn(6).setPreferredWidth(250);
                tblBookList.getColumnModel().getColumn(7).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(8).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(9).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(10).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(11).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(12).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(13).setPreferredWidth(300);
                tblBookList.setSelectionBackground(Color.ORANGE);
            } else if (cmbFilter.getSelectedItem().equals("Shelf")) {
                cst = con.prepareCall("{call sp_GetBookByShelf(?)}");
                cst.setString("param_Shelf", "%" + txtSearch.getText() + "%");
                rs = cst.executeQuery();
                if (rs.next()) {
                    rs.last();
                    rows = rs.getRow();
                    rs.beforeFirst();
                }
                String[][] data = new String[rows][14];
                while (rs.next()) {
                    data[rowIndex][0] = rs.getString(1);
                    data[rowIndex][1] = rs.getString(2);
                    data[rowIndex][2] = rs.getString(3);
                    data[rowIndex][3] = rs.getString(4);
                    data[rowIndex][4] = rs.getString(5);
                    data[rowIndex][5] = rs.getString(6);
                    data[rowIndex][6] = rs.getString(7);
                    data[rowIndex][7] = rs.getString(8);
                    data[rowIndex][8] = rs.getString(9);
                    data[rowIndex][9] = rs.getString(10);
                    data[rowIndex][10] = rs.getString(11);
                    data[rowIndex][11] = rs.getString(12);
                    data[rowIndex][12] = rs.getString(13);
                    data[rowIndex][13] = rs.getString(14);
                    rowIndex++;
                }
                String[] cols = {"ID", "RFID", "TITLE", "BUBJECT", "AUTHORS", "PUBLISHER", "COPYRIGHT YEAR", "ORIGINAL TOTAL PAGES", "CURRENT TOTAL PAGES", "QUANTITY", "DATE", "TIME", "SHELF", "ACCOUNT NAME"};
                DefaultTableModel model = new DefaultTableModel(data, cols);
                tblBookList.setRowHeight(25);
                tblBookList.setModel(model);
                DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                centerRenderer.setHorizontalAlignment(JLabel.CENTER);
                tblBookList.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(4).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(5).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(6).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(7).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(8).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(9).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(10).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(11).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(12).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(13).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(0).setWidth(0);
                tblBookList.getColumnModel().getColumn(0).setMinWidth(0);
                tblBookList.getColumnModel().getColumn(0).setMaxWidth(0);
                tblBookList.getColumnModel().getColumn(1).setPreferredWidth(250);
                tblBookList.getColumnModel().getColumn(2).setPreferredWidth(600);
                tblBookList.getColumnModel().getColumn(3).setPreferredWidth(300);
                tblBookList.getColumnModel().getColumn(4).setPreferredWidth(900);
                tblBookList.getColumnModel().getColumn(5).setPreferredWidth(600);
                tblBookList.getColumnModel().getColumn(6).setPreferredWidth(250);
                tblBookList.getColumnModel().getColumn(7).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(8).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(9).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(10).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(11).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(12).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(13).setPreferredWidth(300);
                tblBookList.setSelectionBackground(Color.ORANGE);
            } else if (cmbFilter.getSelectedItem().equals("Account Name")) {
                cst = con.prepareCall("{call sp_GetBookByAccountName(?)}");
                cst.setString("param_AccountName", "%" + txtSearch.getText() + "%");
                rs = cst.executeQuery();
                if (rs.next()) {
                    rs.last();
                    rows = rs.getRow();
                    rs.beforeFirst();
                }
                String[][] data = new String[rows][14];
                while (rs.next()) {
                    data[rowIndex][0] = rs.getString(1);
                    data[rowIndex][1] = rs.getString(2);
                    data[rowIndex][2] = rs.getString(3);
                    data[rowIndex][3] = rs.getString(4);
                    data[rowIndex][4] = rs.getString(5);
                    data[rowIndex][5] = rs.getString(6);
                    data[rowIndex][6] = rs.getString(7);
                    data[rowIndex][7] = rs.getString(8);
                    data[rowIndex][8] = rs.getString(9);
                    data[rowIndex][9] = rs.getString(10);
                    data[rowIndex][10] = rs.getString(11);
                    data[rowIndex][11] = rs.getString(12);
                    data[rowIndex][12] = rs.getString(13);
                    data[rowIndex][13] = rs.getString(14);
                    rowIndex++;
                }
                String[] cols = {"ID", "RFID", "TITLE", "BUBJECT", "AUTHORS", "PUBLISHER", "COPYRIGHT YEAR", "ORIGINAL TOTAL PAGES", "CURRENT TOTAL PAGES", "QUANTITY", "DATE", "TIME", "SHELF", "ACCOUNT NAME"};
                DefaultTableModel model = new DefaultTableModel(data, cols);
                tblBookList.setRowHeight(25);
                tblBookList.setModel(model);
                DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                centerRenderer.setHorizontalAlignment(JLabel.CENTER);
                tblBookList.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(3).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(4).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(5).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(6).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(7).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(8).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(9).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(10).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(11).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(12).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(13).setCellRenderer(centerRenderer);
                tblBookList.getColumnModel().getColumn(0).setWidth(0);
                tblBookList.getColumnModel().getColumn(0).setMinWidth(0);
                tblBookList.getColumnModel().getColumn(0).setMaxWidth(0);
                tblBookList.getColumnModel().getColumn(1).setPreferredWidth(250);
                tblBookList.getColumnModel().getColumn(2).setPreferredWidth(600);
                tblBookList.getColumnModel().getColumn(3).setPreferredWidth(300);
                tblBookList.getColumnModel().getColumn(4).setPreferredWidth(900);
                tblBookList.getColumnModel().getColumn(5).setPreferredWidth(600);
                tblBookList.getColumnModel().getColumn(6).setPreferredWidth(250);
                tblBookList.getColumnModel().getColumn(7).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(8).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(9).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(10).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(11).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(12).setPreferredWidth(200);
                tblBookList.getColumnModel().getColumn(13).setPreferredWidth(300);
                tblBookList.setSelectionBackground(Color.ORANGE);
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
            ex.printStackTrace();
        }
        this.lblTotalEntry.setText("TOTAL ENTRY: " + tblBookList.getRowCount());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrame_BookList.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrame_BookList.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrame_BookList.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame_BookList.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrame_BookList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel JPANEL1;
    private javax.swing.JButton btnAddNewBook;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnShelfList;
    private javax.swing.JButton btnSubjectList;
    private javax.swing.JComboBox<String> cmbFilter;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jsp_BookList;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTotalEntry;
    private javax.swing.JTable tblBookList;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
