/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JFrames;

import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import Connection.DatabaseConnection;
import static JFrames.Objects.con;
import static JFrames.Objects.pst;

/**
 *
 * @author Joshua C. Magoliman
 */
public class JFrame_SetANewPassword extends javax.swing.JFrame {

    /**
     * Creates new form JFrame_SetANewPassword
     */
    public static int accountID;

    public JFrame_SetANewPassword() {
        initComponents();
        DatabaseConnection dbc = DatabaseConnection.getDatabaseConnection();
        con = dbc.getConnection();
        setIcon();
        reset();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        lblNewPassword = new javax.swing.JLabel();
        txtConfirmNewPassword = new javax.swing.JPasswordField();
        chkShowPassword = new javax.swing.JCheckBox();
        lblConfirmNewPassword = new javax.swing.JLabel();
        btnConfirm = new javax.swing.JButton();
        txtNewPassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SET A NEW PASSWORD");
        setResizable(false);

        jPanel1.setBackground(java.awt.Color.white);

        btnBack.setBackground(new java.awt.Color(0, 153, 0));
        btnBack.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBack.setForeground(java.awt.Color.white);
        btnBack.setText("BACK");
        btnBack.setBorder(null);
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBack.setFocusable(false);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblNewPassword.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblNewPassword.setText("New Password");

        txtConfirmNewPassword.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        txtConfirmNewPassword.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtConfirmNewPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtConfirmNewPasswordKeyTyped(evt);
            }
        });

        chkShowPassword.setBackground(java.awt.Color.white);
        chkShowPassword.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chkShowPassword.setText("Show Password");
        chkShowPassword.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        chkShowPassword.setFocusable(false);
        chkShowPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkShowPasswordActionPerformed(evt);
            }
        });

        lblConfirmNewPassword.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lblConfirmNewPassword.setText("Confirm New Password");

        btnConfirm.setBackground(new java.awt.Color(0, 153, 0));
        btnConfirm.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnConfirm.setForeground(java.awt.Color.white);
        btnConfirm.setText("CONFIRM");
        btnConfirm.setBorder(null);
        btnConfirm.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnConfirm.setFocusable(false);
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        txtNewPassword.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        txtNewPassword.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNewPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNewPasswordKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNewPasswordKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(lblNewPassword))
                    .addComponent(lblConfirmNewPassword, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkShowPassword)
                    .addComponent(txtConfirmNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(btnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNewPassword)
                    .addComponent(txtNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtConfirmNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblConfirmNewPassword))
                .addGap(18, 18, 18)
                .addComponent(chkShowPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        getAccessibleContext().setAccessibleName("FORGOT");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
   private void reset() {
        txtNewPassword.setText("");
        txtConfirmNewPassword.setText("");
        chkShowPassword.setSelected(false);
    }

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("ICON.png")));
    }
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        if (btnBack.getText().equals("BACK")) {
            this.hide();
            new JFrame_ForgotPassword().setVisible(true);
        } else {
            int question = JOptionPane.showConfirmDialog(null, " Are you sure want to cancel?", "ATTENTION", JOptionPane.YES_NO_OPTION);
            if (question == JOptionPane.YES_OPTION) {
                this.hide();
                JFrame_ForgotPassword nextFrame = new JFrame_ForgotPassword();
                nextFrame.show();
            }
        }
    }//GEN-LAST:event_btnBackActionPerformed

    private void chkShowPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkShowPasswordActionPerformed
        if (chkShowPassword.isSelected()) {
            txtNewPassword.setEchoChar((char) 0);
            txtConfirmNewPassword.setEchoChar((char) 0);
        } else {
            txtNewPassword.setEchoChar('*');
            txtConfirmNewPassword.setEchoChar('*');
        }
        this.lblNewPassword.requestFocus();
    }//GEN-LAST:event_chkShowPasswordActionPerformed
    private void validation() {
        if (txtNewPassword.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "No New Password Found!", "ATTENTION", JOptionPane.ERROR_MESSAGE);
            txtNewPassword.requestFocus();
        } else if (txtConfirmNewPassword.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "No Confirm New Password Found!", "ATTENTION", JOptionPane.ERROR_MESSAGE);
            txtConfirmNewPassword.requestFocus();
        } else {
            comparing();
        }
    }

    private void comparing() {
        if (!txtNewPassword.getText().equals(txtConfirmNewPassword.getText())) {
            JOptionPane.showMessageDialog(this, "Your New Password and Confirm New Password are not the same!", "ATTENTION", JOptionPane.ERROR_MESSAGE);
        } else if (!txtConfirmNewPassword.getText().equals(txtNewPassword.getText())) {
            JOptionPane.showMessageDialog(this, "Your New Password and Confirm New Password are not the same!", "ATTENTION", JOptionPane.ERROR_MESSAGE);
        } else {
            settingANewPassword();
        }
    }

    private void settingANewPassword() {
        try {
            String hashedPassword = BCrypt.hashpw(txtConfirmNewPassword.getText(), BCrypt.gensalt(12));
            pst = con.prepareStatement("UPDATE tbl_users SET password = ? WHERE id = ?");
            pst.setString(1, hashedPassword);
            pst.setInt(2, accountID);
            if (pst.executeUpdate() == 1) {
                JOptionPane.showMessageDialog(this, "Successfully updated your password!", "ATTENTION", JOptionPane.INFORMATION_MESSAGE);
                reset();
                this.hide();
                JFrame_Login nextFrame = new JFrame_Login();
                nextFrame.show();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
            ex.printStackTrace();
        }
    }
    private void txtConfirmNewPasswordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConfirmNewPasswordKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isAlphabetic(c) || Character.isDigit(c) || Character.isWhitespace(c) || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
        if (txtConfirmNewPassword.getText().length() >= 12) {
            evt.consume();
        }
    }//GEN-LAST:event_txtConfirmNewPasswordKeyTyped

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        validation();
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void txtNewPasswordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNewPasswordKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isAlphabetic(c) || Character.isDigit(c) || Character.isWhitespace(c) || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
        if (txtNewPassword.getText().length() >= 12) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNewPasswordKeyTyped

    private void txtNewPasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNewPasswordKeyReleased
        if (txtNewPassword.getText().equals("")) {
            btnBack.setText("BACK");
        } else {
            btnBack.setText("CANCEL");
        }
    }//GEN-LAST:event_txtNewPasswordKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrame_SetANewPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrame_SetANewPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrame_SetANewPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame_SetANewPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrame_SetANewPassword().setVisible(true);
            }
        });
    }

    void setVisible() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JCheckBox chkShowPassword;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblConfirmNewPassword;
    private javax.swing.JLabel lblNewPassword;
    private javax.swing.JPasswordField txtConfirmNewPassword;
    private javax.swing.JPasswordField txtNewPassword;
    // End of variables declaration//GEN-END:variables
}
